# Redux

-----
### Redux的设计思想
    1. Web 应用的状态机，视图和状态一一对应。
    2. 所有状态保存在一个对象了里面。

### Store
    Store 就是保存数据的地方，可以看作一个容器，整个应用只有一个Store。
    Redux 提供createStore 函数，用来生成Store。
    ```
        import { createStore } from "redux"
        const store = createStore(fn)
    ```

### State
    Store 对象包含所有数据，如果想要得到某个时点的数据，就要对Store生成快照。这种时点的数据集合，叫做State。
    通过store.getState()拿到。
    ```
        const state = store.getState();
    ```
    #### Redux 规定一个state对应一个View。只要state相同，View就相同！！
### Provider
    作为容器组件，用来接收Store，并且让Store对子组件可用(利用React隐藏的特性Contexts)，Contents用来传递一些父容器的属性对所有子组件可见，在某些场景避免了props传递多层组件的繁琐。

---- 

## combineReducers